@page "/Topic"
@using BlazorApp3.Services
@inject UserSession UserSession
@inject NavigationManager NavigationManager
@inject TopicService TopicService

<div class="content-wrapper topic-page-wrapper">
    <div class="button-home-container">
        <button class="button-home" @onclick="NavigateToSettings">Settings</button>
    </div>

    <style>
        .topic-page-wrapper {
            max-width: 1000px;
        }

        .Title {
            font-size: 30px;
            text-align: center;
            margin-bottom: 20px;
            color: #333;
            font-weight: 700;
        }

        .button-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 70vh; /* Occupy most of the vertical space */
            gap: 20px; /* Space between buttons */
        }

        .button { /* General style for main topic/action buttons */
            padding: 12px 20px;
            background-color: #f0f0f0;
            border: 1px solid #e0e0e0; /* Softer border */
            cursor: pointer;
            width: 300px;
            border-radius: 8px;
            text-align: center;
            min-height: 80px;
            font-size: 1.2em; /* Larger font for main buttons */
            font-weight: 600;
            color: #333;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05); /* Subtle shadow */
            transition: background-color 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
        }

        .button:hover {
            background-color: #e0e0e0;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .dropdown {
            position: relative;
            display: inline-block;
            width: 300px;
            box-sizing: border-box;

        }

        .dropdown-button {
            width: 100%;
            min-height: 80px;
            padding: 12px 20px;
            background-color: #f0f0f0;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1.2em;
            font-weight: 600;
            color: #333;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
            transition: background-color 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
        }

        .dropdown-button:hover {
            background-color: #e0e0e0;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f1f1f1;
            min-width: 350px;
            box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);
            z-index: 1;
            border-radius: 8px;
            left: 100%;
            top: 0;
        }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            border-radius: 8px;
        }


        /* Change color of dropdown on hover */
        .dropdown-content a:hover {
            background-color: #ddd;
        }

        /* Show the dropdown menu on hover */
        .dropdown:hover .dropdown-content {
            display: block;
        }


    </style>

    <p class="Title"> Welcome @UserSession.UserName!</p>

    <div class="button-container">
        <div>
            @if (UserSession.IsAdmin && UserSession.isLoggedIn)
            {
                <button class="button" @onclick="NavigateToAdmin">Admin Panel</button>
            }
        </div>
        <div class="dropdown">
            <button class="dropdown-button">Select a Math Topic!</button>
            <div class="dropdown-content">
                @if (_topics == null)
                {
                    <a href="#">Loading topics...</a>
                }
                else if (!_topics.Any())
                {
                    <a href="#">No topics available.</a>
                }
                else
                {
                    @foreach (var topic in _topics)
                    {
                        <a href="/Shapes/@topic.TopicId">@topic.Title</a>
                    }
                }
                <a href="#">More Topics Coming Soon!</a>
            </div>
        </div>
        <div>
            <button class="button" @onclick="NavigateToPractice">Practice Your Skills!</button>
        </div>
        <div>
            <button class="button" @onclick="NavigateToStats">See Your Statistics!</button>
        </div>
    </div>


    @if (!_isLoggedInAndLoaded)
    {
        <p class="alert alert-danger"> Sorry! only logged in users can access topic selection</p>
        NavigationManager.NavigateTo("/", true);
    }
</div>

@code {
    private List<Data.Topic> _topics = new List<Data.Topic>();
    private bool _isLoggedInAndLoaded = false;

    protected override async Task OnInitializedAsync()
    {
        // Ensure user is logged in before attempting to load topics
        if (!UserSession.isLoggedIn)
        {
            _isLoggedInAndLoaded = false;
            StateHasChanged();
            await Task.Delay(1000);

            NavigationManager.NavigateTo("/", true);
            return;
        }

        _isLoggedInAndLoaded = true;
        try
        {
            _topics = await TopicService.GetAllTopicsAsync();
            if (_topics == null)
            {
                _topics = new List<BlazorApp3.Data.Topic>(); //prevent nll exception
            }
        }
        catch (Exception ex)
        {
            _topics = new List<BlazorApp3.Data.Topic>(); // Prevent null exception
        }
    }

    public void NavigateToSettings()
    {
        NavigationManager.NavigateTo("/Settings");
    }

    public void NavigateToPractice()
    {
        NavigationManager.NavigateTo("/Practice");
    }

    public void NavigateToStats()
    {
        NavigationManager.NavigateTo("/Stats");
    }

    public void NavigateToAdmin()
    {
        NavigationManager.NavigateTo("/AdminPanel");
    }

}